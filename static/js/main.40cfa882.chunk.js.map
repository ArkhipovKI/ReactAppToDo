{"version":3,"sources":["components/new-task-form.js","components/task.js","components/new-task-list.js","components/tasks-filter.js","components/footer.js","components/item-add-form.js","index.js"],"names":["NewTaskForm","className","placeholder","autoFocus","Task","this","props","label","onDeleted","complited","toggleStateOfTask","classNames","type","onClick","Component","NewTaskList","todos","el","map","item","id","TasksFilter","Footer","ItemAddForm","AddItem","ToDoApp","maxId","state","toDoData","createItem","addNewItem","text","setState","newItem","index","findIndex","oldEl","newEl","slice","deleteItem","console","log","filter","ReactDOM","render","document","getElementById"],"mappings":"+PAQeA,EANK,WACnB,OACC,uBAAOC,UAAU,WAAWC,YAAY,yBAAyBC,WAAS,KCFvDC,E,4JAEpB,WACC,MAA2DC,KAAKC,MAAxDC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,UAAWC,EAA1B,EAA0BA,UAAWC,EAArC,EAAqCA,kBAEjCC,EAAa,cAMjB,OAJIF,IACHE,GAAc,sBAId,sBAAKV,UAAU,OAAf,UACC,uBAAOA,UAAU,SAASW,KAAK,WAAWC,QAASH,IACnD,kCACC,sBAAMT,UAAWU,EAAjB,SAA8BJ,IAC9B,sBAAMN,UAAU,UAAhB,sCAED,wBAAQA,UAAU,mBAClB,wBAAQA,UAAU,oBAAoBY,QAASL,W,GAnBjBM,aCiBnBC,EAhBK,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,MAAOR,EAAmC,EAAnCA,UAAWE,EAAwB,EAAxBA,kBAClCO,EAAKD,EAAME,KAAI,SAACC,GAAD,OACpB,6BACC,cAAC,EAAD,2BACKA,GADL,IAECX,UAAW,kBAAMA,EAAUW,EAAKC,KAChCV,kBAAmB,kBAAMA,EAAmBS,EAAKC,SAJ1CD,EAAKC,OAOf,OACC,oBAAInB,UAAU,YAAd,SACEgB,KCIWI,EAhBK,WACnB,OACC,qBAAIpB,UAAU,UAAd,UACC,6BACC,wBAAQA,UAAU,WAAlB,mBAED,6BACC,8CAED,6BACC,qDCAWqB,EATA,WACd,OACC,yBAAQrB,UAAU,SAAlB,UACC,sBAAMA,UAAU,aAAhB,0BACA,cAAC,EAAD,QCLkBsB,E,4JACpB,WACC,IAAQC,EAAYnB,KAAKC,MAAjBkB,QACR,OACC,qBAAKvB,UAAU,aAAf,SACC,wBAAQA,UAAU,4BAA4BY,QAASW,EAAvD,4B,GALqCV,aCMpBW,E,4MAEpBC,MAAQ,E,EAERC,MAAQ,CACPC,SAAU,CACT,EAAKC,WAAW,kBAChB,EAAKA,WAAW,gBAChB,EAAKA,WAAW,iB,EAYlBC,WAAa,SAACC,GACb,EAAKC,UAAS,YAAmB,IAAhBJ,EAAe,EAAfA,SAEVK,EAAU,EAAKJ,WAAWE,GAGhC,MAAO,CACNH,SAHW,sBAAOA,GAAP,CAAiBK,S,EAS/BvB,kBAAoB,SAACU,GACpB,EAAKY,UAAS,YAAmB,IAAhBJ,EAAe,EAAfA,SAEVM,EAAQN,EAASO,WAAU,SAAClB,GAAD,OAAQA,EAAGG,KAAOA,KAE7CgB,EAAQR,EAASM,GACjBG,EAAK,2BAAQD,GAAR,IAAe3B,WAAY2B,EAAM3B,YAQ5C,MAAO,CAAEmB,SANG,sBACRA,EAASU,MAAM,EAAGJ,IADV,CAEXG,GAFW,YAGRT,EAASU,MAAMJ,EAAQ,U,EAO7BK,WAAa,SAACnB,GACb,EAAKY,UAAS,YAAmB,IAAhBJ,EAAe,EAAfA,SAIhB,OAHAY,QAAQC,IAAIb,GAGL,CACNA,SAHcA,EAASc,QAAO,SAACzB,GAAD,OAAQA,EAAGG,KAAOA,U,gDA1CnD,SAAWb,GACV,MAAQ,CACPA,QACAE,WAAW,EACXW,GAAIf,KAAKqB,W,oBA8CX,WAAU,IAAD,OACR,OACC,0BAASzB,UAAU,UAAnB,UACC,mCACC,uCACA,cAAC,EAAD,OAED,0BAASA,UAAU,OAAnB,UACC,cAAC,EAAD,CAAae,MAAOX,KAAKsB,MAAMC,SAC9BpB,UAAWH,KAAKkC,WAChB7B,kBAAmBL,KAAKK,oBACzB,cAAC,EAAD,CAAac,QAAS,kBAAM,EAAKM,WAAW,kBAC5C,cAAC,EAAD,c,GA1EgChB,aAgFrC6B,IAASC,OAAO,cAAC,EAAD,IAAaC,SAASC,eAAe,W","file":"static/js/main.40cfa882.chunk.js","sourcesContent":["import React from 'react';\n\nconst NewTaskForm = () => {\n\treturn (\n\t\t<input className='new-todo' placeholder='What needs to be done?' autoFocus />\n\t)\n}\n\nexport default NewTaskForm;","import React, { Component } from 'react';\n\nexport default class Task extends Component {\n\n\trender() {\n\t\tconst { label, onDeleted, complited, toggleStateOfTask } = this.props;\n\n\t\tlet classNames = 'description';\n\n\t\tif (complited) {\n\t\t\tclassNames += ' crossover-element'\n\t\t}\n\n\t\treturn (\n\t\t\t<div className='view'>\n\t\t\t\t<input className=\"toggle\" type=\"checkbox\" onClick={toggleStateOfTask} />\n\t\t\t\t<label>\n\t\t\t\t\t<span className={classNames}>{label}</span>\n\t\t\t\t\t<span className=\"created\">created 5 minutes ago</span>\n\t\t\t\t</label>\n\t\t\t\t<button className=\"icon icon-edit\"></button>\n\t\t\t\t<button className=\"icon icon-destroy\" onClick={onDeleted}></button>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n","import React from 'react';\nimport Task from './task';\n\nconst NewTaskList = ({ todos, onDeleted, toggleStateOfTask }) => {\n\tconst el = todos.map((item) => (\n\t\t<li key={item.id}>\n\t\t\t<Task\n\t\t\t\t{...item}\n\t\t\t\tonDeleted={() => onDeleted(item.id)}\n\t\t\t\ttoggleStateOfTask={() => toggleStateOfTask (item.id)} />\n\t\t</li>\n\t))\n\treturn (\n\t\t<ul className='todo-list'>\n\t\t\t{el}\n\t\t</ul>\n\t)\n}\n\nexport default NewTaskList;","import React from 'react';\n\nconst TasksFilter = () => {\n\treturn (\n\t\t<ul className=\"filters\">\n\t\t\t<li>\n\t\t\t\t<button className=\"selected\">All</button>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<button>Active</button>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<button>Completed</button>\n\t\t\t</li>\n\t\t</ul>\n\t)\n}\n\nexport default TasksFilter;","import React from 'react';\nimport TasksFilter from './tasks-filter'\n\nconst Footer = () => {\n\treturn (\n\t\t<footer className='footer'>\n\t\t\t<span className=\"todo-count\">1 items left</span>\n\t\t\t<TasksFilter />\n\t\t</footer>\n\t)\n}\n\nexport default Footer;","import React, { Component } from 'react'\n\nexport default class ItemAddForm extends Component {\n\trender() {\n\t\tconst { AddItem } = this.props;\n\t\treturn (\n\t\t\t<div className='button-add'>\n\t\t\t\t<button className='btn btn-outline-secondary' onClick={AddItem}>\n\t\t\t\t\tAdd Item\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t)\n\t}\n}","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport NewTaskForm from './components/new-task-form';\nimport NewTaskList from './components/new-task-list';\nimport Footer from './components/footer';\nimport ItemAddForm from './components/item-add-form';\n\nexport default class ToDoApp extends Component {\n\n\tmaxId = 1;\n\n\tstate = {\n\t\ttoDoData: [\n\t\t\tthis.createItem('Completed task'),\n\t\t\tthis.createItem('Editing task'),\n\t\t\tthis.createItem('Active task')\n\t\t]\n\t};\n\n\tcreateItem(label) {\n\t\treturn ({\n\t\t\tlabel,\n\t\t\tcomplited: false,\n\t\t\tid: this.maxId++\n\t\t})\n\t}\n\n\taddNewItem = (text) => {\n\t\tthis.setState(({ toDoData }) => {\n\n\t\t\tconst newItem = this.createItem(text)\n\t\t\tconst newArr = [...toDoData, newItem]\n\n\t\t\treturn {\n\t\t\t\ttoDoData: newArr\n\t\t\t}\n\n\t\t})\n\t}\n\n\ttoggleStateOfTask = (id) => {\n\t\tthis.setState(({ toDoData }) => {\n\n\t\t\tconst index = toDoData.findIndex((el) => el.id === id);\n\n\t\t\tconst oldEl = toDoData[index];\n\t\t\tconst newEl = { ...oldEl, complited: !oldEl.complited }\n\n\t\t\tconst newArr = [\n\t\t\t\t...toDoData.slice(0, index),\n\t\t\t\tnewEl,\n\t\t\t\t...toDoData.slice(index + 1)\n\t\t\t]\n\n\t\t\treturn { toDoData: newArr };\n\t\t})\n\t}\n\n\tdeleteItem = (id) => {\n\t\tthis.setState(({ toDoData }) => {\n\t\t\tconsole.log(toDoData)\n\t\t\tconst newArr = toDoData.filter((el) => el.id !== id)\n\n\t\t\treturn {\n\t\t\t\ttoDoData: newArr\n\t\t\t}\n\t\t})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<section className='todoapp' >\n\t\t\t\t<header>\n\t\t\t\t\t<h1>todos</h1>\n\t\t\t\t\t<NewTaskForm />\n\t\t\t\t</header>\n\t\t\t\t<section className='main'>\n\t\t\t\t\t<NewTaskList todos={this.state.toDoData}\n\t\t\t\t\t\tonDeleted={this.deleteItem}\n\t\t\t\t\t\ttoggleStateOfTask={this.toggleStateOfTask} />\n\t\t\t\t\t<ItemAddForm AddItem={() => this.addNewItem('Hello world')} />\n\t\t\t\t\t<Footer />\n\t\t\t\t</section>\n\t\t\t</section>\n\t\t);\n\t}\n}\nReactDOM.render(<ToDoApp />, document.getElementById('root'))\n"],"sourceRoot":""}